[
null,
{"id":1,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":1,"maxTurns":1,"message1":"ha muerto!","message2":"ha morido!","message3":"","message4":" ¡revivió!","minTurns":1,"motion":3,"name":"Muerto","note":"El estado #1 será automáticamente añadido cuando HP sea 0.","overlay":0,"priority":100,"releaseByDamage":false,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":23,"dataId":9,"value":0}]},
{"id":2,"autoRemovalTiming":2,"chanceByDamage":100,"description":"","iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Protección","note":"","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":true,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":62,"dataId":1,"value":0}]},
{"id":3,"autoRemovalTiming":0,"chanceByDamage":100,"description":"","iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Inmortal","note":"","overlay":0,"priority":0,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":14,"dataId":1,"value":0}]},
{"id":4,"autoRemovalTiming":0,"chanceByDamage":100,"iconIndex":2,"maxTurns":1,"message1":" ¡está envenenado!","message2":" ¡está envenenado!","message3":"","message4":" ¡ya no está envenenado!","minTurns":1,"motion":1,"overlay":1,"name":"Veneno","note":"","priority":50,"releaseByDamage":false,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":7,"value":-0.1}]},
{"id":5,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":3,"maxTurns":5,"message1":" ¡está cegado!","message2":" ¡está cegado!","message3":"","message4":" ¡ya no está cegado!","minTurns":3,"motion":1,"name":"Ceguera","note":"","overlay":2,"priority":60,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":22,"dataId":0,"value":-0.5}]},
{"id":6,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":4,"maxTurns":5,"message1":" ¡está callado!","message2":" ¡está callado!","message3":"","message4":" ¡ya no está callado!","minTurns":3,"motion":1,"name":"Silencio","note":"","overlay":3,"priority":65,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100,"traits":[{"code":42,"dataId":1,"value":0}]},
{"id":7,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":5,"maxTurns":4,"message1":" ¡está furioso!","message2":" ¡está furioso!","message3":"","message4":" ¡ya no está furioso!","minTurns":2,"motion":1,"name":"Rabia","note":"","overlay":4,"priority":70,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":1,"stepsToRemove":100,"traits":[]},
{"id":8,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":6,"maxTurns":4,"message1":" ¡está confuso!","message2":" ¡está confuso!","message3":"","message4":" ¡ya no está confuso!","minTurns":2,"motion":1,"name":"Confusión","note":"","overlay":5,"priority":75,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":2,"stepsToRemove":100,"traits":[]},
{"id":9,"autoRemovalTiming":1,"chanceByDamage":50,"iconIndex":7,"maxTurns":4,"message1":" ¡está fascinado!","message2":" ¡está fascinado!","message3":"","message4":" ¡ya no está fascinado!","minTurns":2,"motion":1,"name":"Enamorado","note":"","overlay":6,"priority":80,"releaseByDamage":false,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":3,"stepsToRemove":100,"traits":[]},
{"id":10,"autoRemovalTiming":1,"chanceByDamage":100,"iconIndex":8,"maxTurns":5,"message1":" ¡se está durmiendo!","message2":" ¡se está durmiendo!","message3":" está durmiendo.","message4":" ¡se despierta!","minTurns":3,"motion":2,"name":"Reposo","note":"","overlay":7,"priority":90,"releaseByDamage":true,"removeAtBattleEnd":true,"removeByDamage":true,"removeByRestriction":false,"removeByWalking":false,"restriction":4,"stepsToRemove":100,"traits":[{"code":22,"dataId":1,"value":-1}]},
{"id":11,"autoRemovalTiming":2,"chanceByDamage":100,"traits":[],"iconIndex":196,"maxTurns":10,"message1":"","message2":"","message3":"","message4":"","minTurns":10,"motion":0,"name":"Combo","note":"<Custom Apply Effect>\n// Defaults user's combo stacks to 0.\nuser._comboStacks = user._comboStacks || 0;\n// Get the current number of stacks. Min 0, Max 10.\nvar stacks = user._comboStacks.clamp(0, 10);\n// Set the combo counter for the state.\nuser.setStateCounter(stateId, 'x' + stacks);\n</Custom Apply Effect>\n\n<Custom Remove Effect>\n// Reset combo stacks to 0.\nuser._comboStacks = 0;\n// Get the current number of stacks. Min 0, Max 10.\nvar stacks = user._comboStacks.clamp(0, 10);\n// Set the combo counter for the state.\nuser.setStateCounter(stateId, 'x' + stacks);\n</Custom Remove Effect>\n\n<Custom Confirm Effect>\n// Check if the user is delivering physical damage and the action does not have \"Combo\" in its name.\nif (this.isPhysical() && value > 0 && !this.item().name.match('Combo')) {\n  // Defaults user's combo stacks to 0.\n  user._comboStacks = user._comboStacks || 0;\n  // Get the current number of stacks. Min 0, Max 10.\n  var stacks = user._comboStacks.clamp(0, 10);\n  // Calculate the extra damage rate from Combo stacks.\n  var rate = 1.00 + stacks * 0.10;\n  // Round the damage upward.\n  value = Math.ceil(value * rate);\n  // Increase stack count.\n  stacks += 1;\n  // Set stack count min to 0, max to 10.\n  stacks = stacks.clamp(0, 10);\n  // Set the combo counter for the state.\n  user.setStateCounter(stateId, 'x' + stacks);\n  // Apply stack count to user's combo count.\n  user._comboStacks = stacks;\n}\n</Custom Confirm Effect>","overlay":0,"priority":90,"removeAtBattleEnd":true,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":12,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":40,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Ea","note":"<Custom Passive Condition>\n// Check if the party is in battle.\nif ($gameParty.inBattle()) {\n  // Default the user's trance state to false.\n  user._trance = user._trance || false;\n  // Sets the condition for the user to be either in the trance state or if the user's TP matches the user's MaxTP.\n  condition = user._trance || user.tp === user.maxTp();\n} else {\n  // Otherwise, the condition is false.\n  condition = false;\n}\n// If the condition passes...\nif (condition) {\n  // And if the user isn't in the trance state...\n  if (!user._trance) {\n    // Then play an animation as the user enters trance.\n    user.startAnimation(120);\n  }\n  // Set the user's trance state to true.\n  user._trance = true;\n}\n</Custom Passive Condition>\n\n<Custom Regenerate Effect>\n// Set the TP drain amount.\nvar tp = 10;\n// Reduce the user's TP.\nuser.gainTp(-tp);\n// If the user's TP is 0...\nif (user.tp === 0) {\n  // ...then turn off trance.\n  user._trance = false;\n}\n<Custom Regenerate Effect>","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":13,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":14,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"","note":"","overlay":0,"priority":50,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100},
{"id":15,"autoRemovalTiming":0,"chanceByDamage":100,"traits":[],"iconIndex":0,"maxTurns":1,"message1":"","message2":"","message3":"","message4":"","minTurns":1,"motion":0,"name":"Hexdrinker","note":"<Custom Regenerate Effect>\n// Default the Hexdrinker's cooldown to 0.\nuser._hexdrinkerCooldown = user._hexdrinkerCooldown || 0;\n// If the Hexdrinker's cooldown is greater than 0...\nif (user._hexdrinkerCooldown > 0) {\n  // Then decrease its cooldown.\n  user._hexdrinkerCooldown -= 1;\n}\n</Custom Regenerate Effect>\n\n<Custom Respond Effect>\n// Default the Hexdrinker's cooldown to 0.\ntarget._hexdrinkerCooldown = target._hexdrinkerCooldown || 0;\n// Check if the action dealt magical HP damage and if the target's current HP rate is under 30%. Also check if there is no cooldown on the Hexdrinker.\nif (this.isMagical() && target.result().hpDamage > 0 && target.hpRate() <= 0.30 && target.hp >= 0 && target._hexdrinkerCooldown <= 0) {\n  // The amount of points for the absorption barrier.\n  var barrier = 250;\n  // How many turns the barrier will last.\n  var turns = 4;\n  // Make the target gain barrier points for those turns.\n  target.gainBarrier(barrier, turns);\n  // Set the cooldown for the Hexdrinker.\n  target._hexdrinkerCooldown = 1;\n  // Play an animation on the target.\n  target.startAnimation(53);\n}\n</Custom Respond Effect>","overlay":0,"priority":100,"removeAtBattleEnd":false,"removeByDamage":false,"removeByRestriction":false,"removeByWalking":false,"restriction":0,"stepsToRemove":100}
]